{"version":3,"file":"static/js/448.649e070c.chunk.js","mappings":"8NAQA,MAqOA,EArO2BA,KACzB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,KAChDK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,KAClCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,KAC5BS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,IAChCW,EAAOC,IAAYZ,EAAAA,EAAAA,UAAwB,OAC3Ca,EAASC,IAAcd,EAAAA,EAAAA,UAAwB,MAEhDe,GAAWC,EAAAA,EAAAA,MAkEjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEC,SAAA,EAC9EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mEAAkEC,SAAC,yBAGjFF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,yCAAwCC,SAAA,CAAC,KACjD,KACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,SAASJ,UAAU,gDAA+CC,SAAC,4CAMhFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,UACpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDC,SAAA,CAC9DR,IAASS,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CAACC,QAASb,EAAOO,UAAU,SACjDL,IACCO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mDAAkDC,UAC/DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,yBAAwBC,SAAEN,WAM/CI,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAYO,SA3DfC,UAInB,GAHAC,EAAEC,iBAGG9B,GAAUG,GAAaE,GAAoBE,EAKhD,GAAIJ,IAAaE,EAKjB,GAAIF,EAAS4B,OAAS,EACpBjB,EAAS,oDAIX,IACEF,GAAW,GACXE,EAAS,WArDQc,OAAO5B,EAAeG,EAAkBI,EAAkBE,KAC7E,MAAQuB,MAAM,KAAEC,GAAM,MAAEpB,SAAgBqB,EAAAA,GAASC,KAAKC,OAAO,CAC3DpC,QACAG,aAGF,GAAIU,EAGF,OAFAwB,QAAQxB,MAAM,gBAAiBA,QAC/BC,EAASD,EAAMa,SAKjB,MAAM,KAAEM,EAAMnB,MAAOyB,SAAuBJ,EAAAA,GACzCK,KAAK,iBACLC,OAAO,CAAC,CAAEC,QAAa,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMS,GAAIC,UAAWpC,EAAUP,QAAOS,WAExD6B,GACFD,QAAQxB,MAAM,+BAAgCyB,GAC9CxB,EAAS,mCAETuB,QAAQO,IAAI,wBAAyBZ,GACrChB,EAAW,4EACX6B,EAAAA,GAAM9B,QAAQ,4EAGd+B,YAAW,KACT7B,EAAS,SAAS,GACjB,KACL,EA0BQ8B,CAAa/C,EAAOG,EAAUI,EAAUE,EAChD,CAAE,MAAOuC,GACPX,QAAQxB,MAAM,sBAAuBmC,GACrClC,EAASkC,aAAeC,MAAQD,EAAItB,QAAU,wCAChD,CAAC,QACCd,GAAW,EACb,MAnBEE,EAAS,+BALTA,EAAS,qCAwBX,EA8ByDO,SAAA,EACjDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO4B,QAAQ,WAAW9B,UAAU,0CAAyCC,SAAC,iBAG9EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,SACEoB,GAAG,WACHS,KAAK,WACLC,KAAK,OACLC,aAAa,OACbC,UAAQ,EACRC,MAAOhD,EACPiD,SAAW3B,GAAMrB,EAAYqB,EAAE4B,OAAOF,OACtCnC,UAAU,0LAKhBD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO4B,QAAQ,QAAQ9B,UAAU,0CAAyCC,SAAC,qBAG3EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,SACEoB,GAAG,QACHS,KAAK,QACLC,KAAK,QACLC,aAAa,QACbC,UAAQ,EACRC,MAAOvD,EACPwD,SAAW3B,GAAM5B,EAAS4B,EAAE4B,OAAOF,OACnCnC,UAAU,0LAKhBD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO4B,QAAQ,QAAQ9B,UAAU,0CAAyCC,SAAC,kBAG3EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,SACEoB,GAAG,QACHS,KAAK,QACLC,KAAK,MACLC,aAAa,MACbE,MAAO9C,EACP+C,SAAW3B,GAAMnB,EAASmB,EAAE4B,OAAOF,OACnCnC,UAAU,0LAKhBD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO4B,QAAQ,WAAW9B,UAAU,0CAAyCC,SAAC,gBAG9EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,SACEoB,GAAG,WACHS,KAAK,WACLC,KAAK,WACLC,aAAa,eACbC,UAAQ,EACRC,MAAOpD,EACPqD,SAAW3B,GAAMzB,EAAYyB,EAAE4B,OAAOF,OACtCnC,UAAU,0LAKhBD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO4B,QAAQ,kBAAkB9B,UAAU,0CAAyCC,SAAC,wBAGrFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,SACEoB,GAAG,kBACHS,KAAK,kBACLC,KAAK,WACLC,aAAa,eACbC,UAAQ,EACRC,MAAOlD,EACPmD,SAAW3B,GAAMvB,EAAmBuB,EAAE4B,OAAOF,OAC7CnC,UAAU,0LAKhBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACEoB,GAAG,QACHS,KAAK,QACLC,KAAK,WACLE,UAAQ,EACRlC,UAAU,uEAEZD,EAAAA,EAAAA,MAAA,SAAO+B,QAAQ,QAAQ9B,UAAU,mCAAkCC,SAAA,CAAC,iBACnD,KACfC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,SAASJ,UAAU,gDAA+CC,SAAC,qBAEpE,IAAI,MACR,KACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,WAAWJ,UAAU,gDAA+CC,SAAC,0BAMlFC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UACE8B,KAAK,SACLM,SAAU/C,EACVS,UAAU,+OAA8OC,SAEvPV,GAAUW,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAACC,KAAK,OAAU,+BAMzC,C","sources":["pages/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nimport Loading from '../components/Loading';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport { toast } from 'react-hot-toast';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nconst Register: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async (email: string, password: string, fullName: string, phone: string) => {\r\n    const { data: { user }, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n    });\r\n\r\n    if (error) {\r\n      console.error('Signup error:', error);\r\n      setError(error.message);\r\n      return;\r\n    }\r\n\r\n    // Insert user profile into user_profiles table\r\n    const { data, error: profileError } = await supabase\r\n      .from('user_profiles')\r\n      .insert([{ user_id: user?.id, full_name: fullName, email, phone }]);\r\n\r\n    if (profileError) {\r\n      console.error('Error creating user profile:', profileError);\r\n      setError('Failed to create user profile');\r\n    } else {\r\n      console.log('User profile created:', data);\r\n      setSuccess('Registration successful! Please check your email to verify your account.');\r\n      toast.success('Registration successful! Please check your email to verify your account.');\r\n      \r\n      // Optionally redirect after a delay\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Form validation\r\n    if (!email || !password || !confirmPassword || !fullName) {\r\n      setError('Please fill in all required fields');\r\n      return;\r\n    }\r\n    \r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n    \r\n    if (password.length < 6) {\r\n      setError('Password must be at least 6 characters long');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      await handleSignup(email, password, fullName, phone);\r\n    } catch (err) {\r\n      console.error('Registration error:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to register. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-[80vh] flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\r\n          Create your account\r\n        </h2>\r\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n          Or{' '}\r\n          <Link to=\"/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n            sign in to your existing account\r\n          </Link>\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n          {error && <ErrorMessage message={error} className=\"mb-4\" />}\r\n          {success && (\r\n            <div className=\"mb-4 bg-green-50 border-l-4 border-green-400 p-4\">\r\n              <div className=\"flex\">\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm text-green-700\">{success}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n            <div>\r\n              <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700\">\r\n                Full Name *\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"fullName\"\r\n                  name=\"fullName\"\r\n                  type=\"text\"\r\n                  autoComplete=\"name\"\r\n                  required\r\n                  value={fullName}\r\n                  onChange={(e) => setFullName(e.target.value)}\r\n                  className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                Email address *\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\r\n                Phone Number\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  type=\"tel\"\r\n                  autoComplete=\"tel\"\r\n                  value={phone}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                  className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                Password *\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n                Confirm Password *\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  required\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"terms\"\r\n                name=\"terms\"\r\n                type=\"checkbox\"\r\n                required\r\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n              />\r\n              <label htmlFor=\"terms\" className=\"ml-2 block text-sm text-gray-900\">\r\n                I agree to the{' '}\r\n                <Link to=\"/terms\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n                  Terms of Service\r\n                </Link>{' '}\r\n                and{' '}\r\n                <Link to=\"/privacy\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n                  Privacy Policy\r\n                </Link>\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"flex w-full justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-75\"\r\n              >\r\n                {loading ? <Loading size=\"sm\" /> : 'Create Account'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register; "],"names":["Register","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","fullName","setFullName","phone","setPhone","loading","setLoading","error","setError","success","setSuccess","navigate","useNavigate","_jsxs","className","children","_jsx","Link","to","ErrorMessage","message","onSubmit","async","e","preventDefault","length","data","user","supabase","auth","signUp","console","profileError","from","insert","user_id","id","full_name","log","toast","setTimeout","handleSignup","err","Error","htmlFor","name","type","autoComplete","required","value","onChange","target","disabled","Loading","size"],"sourceRoot":""}